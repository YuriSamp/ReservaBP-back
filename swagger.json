{
  "swagger": "2.0",
  "info": {
    "title": "Backend Reserva BP",
    "description": "CRUD de usuários e serviço de agendamento entre clientes e consultores de seguro",
    "version": "1.0.0"
  },
  "paths": {
    "/signin": {
      "post": {
        "tags": ["Usuário"],
        "summary": "Autenticação do usuário",
        "description": "Endpoint para autenticar um usuário e obter um token.",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "Credenciais do usuário para autenticação.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "teste@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "novasenha123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autenticação bem-sucedida.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email Invalido"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Usuário não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": ["Usuário"],
        "summary": "Cadastro de Usuário",
        "description": "Endpoint para cadastrar um novo usuário.",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "userData",
            "description": "Dados do usuário para cadastro.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "novousuario123"
                },
                "email": {
                  "type": "string",
                  "example": "teste@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "novasenha123"
                },
                "confirmPassword": {
                  "type": "string",
                  "example": "novasenha123"
                },
                "role": {
                  "type": "string",
                  "enum": ["Corretor de seguro", "Cliente"],
                  "example": "Cliente"
                },
                "profilePicture": {
                  "type": "string",
                  "example": "https://github.com/samsantos.png"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário cadastrado com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email Invalido"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - Usuário já existe.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "E-mail já cadastrado"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Usuário"],
        "summary": "Obter Usuários",
        "description": "Endpoint para obter a lista de usuários.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer  Token JWT de autenticação",
            "required": true,
            "type": "string",
            "format": "JWT"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários obtida com sucesso.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "name": {
                    "type": "string",
                    "example": "novousuario123"
                  },
                  "email": {
                    "type": "string",
                    "example": "teste@gmail.com"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["Corretor de seguro", "Cliente"],
                    "example": "Cliente"
                  },
                  "profilePicture": {
                    "type": "string",
                    "example": "https://github.com/samsantos.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado - Token inválido ou ausente.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Sem autorização"
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": ["Usuário"],
        "summary": "Obter Dados do Usuário Atual",
        "description": "Endpoint para obter os dados do usuário autenticado.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Dados do usuário obtidos com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                },
                "name": {
                  "type": "string",
                  "example": "novousuario123"
                },
                "email": {
                  "type": "string",
                  "example": "teste@gmail.com"
                },
                "role": {
                  "type": "string",
                  "enum": ["Corretor de seguro", "Cliente"],
                  "example": "Cliente"
                },
                "profilePicture": {
                  "type": "string",
                  "example": "https://github.com/samsantos.png"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado - Token inválido ou ausente.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Sem autorização"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Usuário não encontrado"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer  Token JWT de autenticação",
            "required": true,
            "type": "string",
            "format": "JWT"
          }
        ]
      }
    },
    "/user/{id}": {
      "put": {
        "tags": ["Usuário"],
        "summary": "Atualizar Dados do Usuário",
        "description": "Endpoint para atualizar os dados de um usuário.",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário a ser atualizado.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer  Token JWT de autenticação",
            "required": true,
            "type": "string",
            "format": "JWT"
          },
          {
            "in": "body",
            "name": "userData",
            "description": "Novos dados do usuário.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "novousuario123"
                },
                "email": {
                  "type": "string",
                  "example": "teste@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "novasenha123"
                },
                "confirmPassword": {
                  "type": "string",
                  "example": "novasenha123"
                },
                "role": {
                  "type": "string",
                  "enum": ["Corretor de seguro", "Cliente"],
                  "example": "Cliente"
                },
                "profilePicture": {
                  "type": "string",
                  "example": "https://github.com/samsantos.png"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Usuário atualizado com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email Invalido"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado - Token inválido ou ausente.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Sem autorização"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Usuário não encontrado"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Usuário"],
        "summary": "Excluir Usuário",
        "description": "Endpoint para excluir um usuário.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer  Token JWT de autenticação",
            "required": true,
            "type": "string",
            "format": "JWT"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário a ser excluído.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso."
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Credenciais inválidas"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado - Token inválido ou ausente.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Sem autorização"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Usuário não encontrado"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling": {
      "post": {
        "tags": ["Agendamento"],
        "summary": "Criar Agendamento",
        "description": "Endpoint para criar um novo agendamento.",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer Token JWT de autenticação",
            "required": true,
            "type": "string",
            "format": "JWT"
          },
          {
            "in": "body",
            "name": "schedule",
            "description": "Dados do agendamento.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "corretor": {
                  "type": "string",
                  "example": "teste@gmail.com"
                },
                "cliente": {
                  "type": "string",
                  "example": "teste@gmail.com"
                },
                "date": {
                  "type": "string",
                  "example": "joao"
                },
                "startTime": {
                  "type": "string",
                  "example": "'2024-02-03T13:23:34.569Z'"
                },
                "endTime": {
                  "type": "string",
                  "example": "'2024-02-03T13:23:34.569Z'"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agendamento criado com sucesso."
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Dados do agendamento inválidos"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado - Token inválido ou ausente.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Sem autorização"
                }
              }
            }
          },
          "404": {
            "description": "Consultor ou cliente não encontrado na database",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Cliente não encontrado"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - Agendamento já existe.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Consultor não disponivel nesse horario"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Usuário",
      "description": "Operações relacionadas a usuários"
    },
    {
      "name": "Agendamento",
      "description": "Operações relacionadas a agendamentos"
    }
  ]
}
